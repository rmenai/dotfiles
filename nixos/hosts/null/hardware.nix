# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
} //

# My custom hardware settings
{
  features = {
    hardware = {
      disko = {
        profile = "btrfs-luks";
        device = "/dev/nvme0n1";
        swapSize = "32G";
      };

      nvidia = {
        enable = true;
        intelBusId = "PCI:0:2:0";
        nvidiaBusId = "PCI:1:0:0";
      };
    };

    impermanence = {
      enable = true;
      persistFolder = "/persist";
    };

    hibernation = {
      enable = true;
      resumeDevice = "/dev/disk/by-uuid/dfe71357-a2e8-479a-b976-0cd1269cbfa2";
      resumeOffset = "533760";
      delaySec = "1h";
    };
  };

  boot = {
    loader = {
      systemd-boot = {
        enable = true;
        configurationLimit = 16;
        editor = false;
      };

      efi.canTouchEfiVariables = true;
      timeout = 3;
    };

    initrd.systemd.enable = true;
    supportedFilesystems = [ "ntfs" "btrfs" ];
  };

  hardware.enableRedistributableFirmware = true;
  hardware.cpu.intel.updateMicrocode = true;
  services.fstrim.enable = true;

  zramSwap = {
    enable = true;
    algorithm = "zstd";
    memoryPercent = 30;
  };

  systemd.services.disable-touchscreen = {
    description = "Disable touchscreen service";
    after = [ "multi-user.target" ];
    wantedBy = [ "multi-user.target" ];
    serviceConfig = {
      Type = "oneshot";
      User = "root";
      Environment = "DEVICE_ID=0018:27C6:0123.0003";
      ExecStart =
        "${pkgs.bash}/bin/bash -c 'echo \"Disabling $DEVICE_ID\" && echo $DEVICE_ID > /sys/bus/hid/drivers/hid-multitouch/unbind'";
      ExecStop =
        "${pkgs.bash}/bin/bash -c 'echo \"Enabling $DEVICE_ID\" && echo $DEVICE_ID > /sys/bus/hid/drivers/hid-multitouch/bind'";
      RemainAfterExit = true;
      Restart = "no";
    };
  };
}
